/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gymMain;

import java.sql.*;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;
import java.util.Vector;
import java.util.*;
import net.proteanit.sql.DbUtils;
import javax.swing.*;
import javax.swing.event.*;
import javax.swing.table.*;
import javax.swing.RowFilter;
import java.sql.Date;
//import net.proteanit.sql.DbUtils;


/**
 *
 * @author jx
 */



public class AdminCurrentMember extends javax.swing.JFrame {

    /**
     * Creates new form Product
     */
    private int memberId;
    public AdminCurrentMember(int memberId) {
        initComponents();
        Connect();
        loadMembers();
        //findUsers();
//      searchAlgo();
        
        searchBox.setVisible(false);
        searchButton.setVisible(false);
        //Clear.setOpaque(false);
        //Clear.setContentAreaFilled(false);
        //Clear.setBorderPainted(false);
        
        /*
        unselect.setOpaque(false);
        unselect.setContentAreaFilled(false);
        unselect.setBorderPainted(false);
        */
        
        //Logout.setOpaque(false);
        //Logout.setContentAreaFilled(false);
        //Logout.setBorderPainted(false);
        
        //Check.setOpaque(false);
        //Add.setContentAreaFilled(false);
        //Add.setBorderPainted(false);
        
        //Clear.setOpaque(false);
        //Clear.setContentAreaFilled(false);
        //Clear.setBorderPainted(false);
        
        //Delete.setOpaque(false);
        //Delete.setContentAreaFilled(false);
        //Delete.setBorderPainted(false);
        
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    Connection Con = null;
    Statement St = null;
    ResultSet Rs = null;
    PreparedStatement Pst = null;
    
    public void Connect() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/gymba", "root", "");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AdminCurrentMember.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AdminCurrentMember.class.getName()).log(Level.SEVERE, null, ex);
        } 
}
    

    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        searchBox = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        currentMember = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        Check = new javax.swing.JButton();
        Remove = new javax.swing.JButton();
        Logout = new javax.swing.JButton();
        unselect = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 200, 221));
        setUndecorated(true);

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));

        jLabel5.setFont(new java.awt.Font("Matura MT Script Capitals", 1, 36)); // NOI18N
        jLabel5.setText("X");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setText("Gym Management");

        searchBox.setToolTipText("");
        searchBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBoxActionPerformed(evt);
            }
        });

        searchButton.setBackground(new java.awt.Color(204, 255, 255));
        searchButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        searchButton.setText("SEARCH");
        searchButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchButtonMouseClicked(evt);
            }
        });
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(searchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(40, 40, 40))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(153, 255, 255));

        currentMember.setAutoCreateRowSorter(true);
        currentMember.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        currentMember.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        currentMember.setShowGrid(false);
        currentMember.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                currentMemberMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(currentMember);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel7.setText("Current Members");

        Check.setBackground(new java.awt.Color(204, 255, 255));
        Check.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Check.setText("Check");
        Check.setToolTipText("");
        Check.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CheckMouseClicked(evt);
            }
        });
        Check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckActionPerformed(evt);
            }
        });

        Remove.setBackground(new java.awt.Color(204, 255, 255));
        Remove.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Remove.setText("Remove");
        Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveActionPerformed(evt);
            }
        });

        Logout.setBackground(new java.awt.Color(204, 255, 255));
        Logout.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Logout.setText("Logout");
        Logout.setToolTipText("");
        Logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogoutMouseClicked(evt);
            }
        });
        Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutActionPerformed(evt);
            }
        });

        unselect.setBackground(new java.awt.Color(204, 255, 255));
        unselect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gymMain/check.png"))); // NOI18N
        unselect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unselectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(Logout)
                        .addGap(231, 231, 231)
                        .addComponent(unselect, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Check, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Remove, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 762, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(404, 404, 404)
                        .addComponent(jLabel7)))
                .addContainerGap(110, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addComponent(Logout, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(unselect, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Check, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Remove, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
//    public ArrayList<User> ListUser(String ValToSearch) {
//        ArrayList<User> usersList = new ArrayList<User>();
//        
//        Statement St;
//        ResultSet rs;
//        
//        try{
//            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/katasnialbu", "root", "");
//            St = Con.createStatement();
//            String searchQuery = "select * from `customertable` where CONCAT(`containerID`, `customerName`, `customerAddress`, `orderStatus`) LIKE '%" + ValToSearch + "%'";
//            rs = St.executeQuery(searchQuery);
//            
//            User user;
//            
//            while(rs.next()) {
//                user = new User(rs.getInt("containerID"),
//                                rs.getString("customerName"),
//                                rs.getString("customerAddress"),
//                                rs.getString("orderStatus"), rs.getString("end_time"), rs.getString("instructor"), rs.getInt("available_spots")
//                                );
//                usersList.add(user);
//            }
//        }catch (SQLException ex) {
//            ex.printStackTrace();
//            Logger.getLogger(AdminCurrentMember.class.getName()).log(Level.SEVERE, null, ex);
//    }
//        return usersList;
//    }
    
    private void loadMembers() {
    try (Connection Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/gymba", "root", "")) {
        String query = "SELECT member_id, username, email, membership_deadline FROM members";
        PreparedStatement stmt = Con.prepareStatement(query);
        ResultSet rs = stmt.executeQuery();
        currentMember.setModel(DbUtils.resultSetToTableModel(rs));
    } catch (SQLException e) {
        e.printStackTrace();
    }
}
    
    private void checkMember() {
    int selectedRow = currentMember.getSelectedRow();
    
    System.out.println("Selected Row: " + selectedRow);
    if (selectedRow != -1) {
        int memberId = (int) currentMember.getValueAt(selectedRow, 0);

        AdminMemberDetails detailsWindow = new AdminMemberDetails(memberId);
        detailsWindow.setVisible(true);
        this.dispose(); 
    } else {
        JOptionPane.showMessageDialog(this, "Please select a member to check.");
    }
}
    
    private void removeMember() {
    int selectedRow = currentMember.getSelectedRow();
    if (selectedRow != -1) {
        int memberId = (int) currentMember.getValueAt(selectedRow, 0);

        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to remove this member?", "Confirm Remove", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            try (Connection Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/gymba", "root", "")) {
                String deleteMemberQuery = "DELETE FROM members WHERE member_id = ?";
                PreparedStatement deleteStmt = Con.prepareStatement(deleteMemberQuery);
                deleteStmt.setInt(1, memberId);
                deleteStmt.executeUpdate();

                JOptionPane.showMessageDialog(this, "Member removed successfully!");
                ((DefaultTableModel) currentMember.getModel()).removeRow(selectedRow);
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select a member to remove.");
    }
}
    private void LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LogoutActionPerformed

    private void currentMemberMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_currentMemberMouseClicked
        DefaultTableModel model = (DefaultTableModel)currentMember.getModel();
        int Myindex = currentMember.getSelectedRow();
        //ContainerID.setText(model.getValueAt(Myindex, 0).toString());
        //customerName.setText(model.getValueAt(Myindex, 1).toString());
        //customerAddress.setText(model.getValueAt(Myindex, 2).toString());
        //orderStatus.setText(model.getValueAt(Myindex, 3).toString());
    }//GEN-LAST:event_currentMemberMouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel5MouseClicked

    private void LogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoutMouseClicked
        new AdminLogin().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_LogoutMouseClicked

    private void unselectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unselectActionPerformed
        currentMember.getSelectionModel().clearSelection();
    }//GEN-LAST:event_unselectActionPerformed

    private void searchBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBoxActionPerformed

    private void searchButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_searchButtonMouseClicked

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
//        searchAlgo();
    }//GEN-LAST:event_searchButtonActionPerformed

    private void CheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CheckActionPerformed

    private void CheckMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CheckMouseClicked
        checkMember();
    }//GEN-LAST:event_CheckMouseClicked

    private void RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveActionPerformed
        removeMember();
    }//GEN-LAST:event_RemoveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AdminCurrentMember().setVisible(true);
//            }
//        });
    }
    
    
//        public void searchAlgo() {
//        ArrayList<User> users = ListUser(searchBox.getText());
//        DefaultTableModel model = new DefaultTableModel();
//        model.setColumnIdentifiers(new Object[]{"class_id","class_day","class_name","start_time","end_time","instructor","available_spots"});
//        Object[] row = new Object[7];
//        
//        for(int i = 0; i < users.size(); i++){
//            row[0] = users.get(i).getclass_id();
//            row[1] = users.get(i).getclass_day();
//            row[2] = users.get(i).getclass_name();
//            row[3] = users.get(i).getstart_time();
//            row[4] = users.get(i).getend_time();
//            row[5] = users.get(i).getinstructor();
//            row[6] = users.get(i).getavailable_spots();
//            model.addRow(row);
//    }
//    currentMember.setModel(model);
//        
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Check;
    private javax.swing.JButton Logout;
    private javax.swing.JButton Remove;
    private javax.swing.JTable currentMember;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField searchBox;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton unselect;
    // End of variables declaration//GEN-END:variables

    


    
}
